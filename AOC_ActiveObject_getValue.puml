@startuml
interface ObserverDeCapteurAsync {
+ Future<Integer> getValue()
}
interface Java.Future {

}
interface Java.Callable {

}
class Java.SchedulerExecutorService {

}
class Canal {
+ Future<Integer> update(c: Capteur)
}
class Afficheur {
}
class CapteurImpl {
+ Integer getValue()
}
interface Capteur {
+ Integer getValue()
}
class GetValue {
+ void call()
}


ObserverDeCapteurAsync <|.. Canal
Java.MethodInvocation <|.. GetValue
Capteur <|.. CapteurImpl

note "getValue: Active Object" as N1
Canal <.. N1 : Proxy
Afficheur <.. N1 : Client
Capteur <.. N1 : Servant
ObserverDeCapteurAsync <.. N1 : Service
Java.Future <.. N1 : Future
Java.MethodInvocation <.. N1 : MI
Java.SchedulerExecutorService <.. N1 : SchedulerExecutorService
CapteurImpl <.. N1 : ConcretServant
GetValue <.. N1 : ConcreteMI

@enduml